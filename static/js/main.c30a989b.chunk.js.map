{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","good1","good2","ALPHABET","localeCompare","LENGTH","length","reverse","console","log","App","state","NONE","isChanged","sortAlphabet","setState","sortByLength","toReverse","toReset","this","className","type","classNames","onClick","map","good","React","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAeK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAGNC,EAAY,YAAOH,GAczB,OAZAG,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQL,GACN,KAAKJ,EAASU,SACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKT,EAASY,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,QACE,OAAO,MAITR,EACKC,EAAaQ,WAItBC,QAAQC,IAAIZ,EAAUC,GAEfC,I,SAtCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA+CE,IAAMiB,EAAb,4MACEC,MAAyB,CACvBb,YAAY,EACZD,SAAUJ,EAASmB,KACnBC,WAAW,GAJf,EAOEC,aAAe,WACb,EAAKC,SAAS,CAAElB,SAAUJ,EAASU,SAAUU,WAAW,KAR5D,EAWEG,aAAe,WACb,EAAKD,SAAS,CAAElB,SAAUJ,EAASY,OAAQQ,WAAW,KAZ1D,EAeEI,UAAY,WACV,EAAKF,UAAS,SAAAJ,GAAK,MAAK,CACtBb,YAAaa,EAAMb,WACnBe,WAAYF,EAAME,eAlBxB,EAsBEK,QAAU,WACR,EAAKH,SAAS,CACZjB,YAAY,EACZD,SAAUJ,EAASmB,KACnBC,WAAW,KA1BjB,4CA8BE,WACE,MAAkCM,KAAKR,MAA/BE,EAAR,EAAQA,UAAWf,EAAnB,EAAmBA,WAEnB,OACE,sBAAKsB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYH,KAAKR,MAAMd,WAAaJ,EAASU,WAEjDoB,QAASJ,KAAKL,aAPhB,iCAYA,wBACEO,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYH,KAAKR,MAAMd,WAAaJ,EAASY,SAEjDkB,QAASJ,KAAKH,aAPhB,4BAYA,wBACEK,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAaH,KAAKR,MAAMb,aAE5ByB,QAASJ,KAAKF,UAPhB,sBAYEJ,GAAaf,IACb,wBACEuB,KAAK,SACLD,UAAU,4BACVG,QAASJ,KAAKD,QAHhB,sBAUJ,6BACE,6BACGvB,EAAkBD,EAAiByB,KAAKR,OAAOa,KAAI,SAAAC,GAAI,OACtD,oBAAe,UAAQ,OAAvB,SACGA,GADMA,iBAtFvB,GAAyBC,IAAMC,eC9D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c30a989b.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2): number => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n        break;\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n  isChanged: boolean,\n};\n\nexport class App extends React.PureComponent<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n    isChanged: false,\n  };\n\n  sortAlphabet = () => {\n    this.setState({ sortType: SortType.ALPHABET, isChanged: true });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH, isChanged: true });\n  };\n\n  toReverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n      isChanged: !state.isChanged,\n    }));\n  };\n\n  toReset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n      isChanged: false,\n    });\n  };\n\n  render() {\n    const { isChanged, isReversed } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-info',\n              { 'is-light': this.state.sortType !== SortType.ALPHABET },\n            )}\n            onClick={this.sortAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-success',\n              { 'is-light': this.state.sortType !== SortType.LENGTH },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-warning',\n              { 'is-light': !this.state.isReversed },\n            )}\n            onClick={this.toReverse}\n          >\n            Reverse\n          </button>\n\n          {(isChanged || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.toReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {getReorderedGoods(goodsFromServer, this.state).map(good => (\n              <li key={good} data-cy=\"Good\">\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}